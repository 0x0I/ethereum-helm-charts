nameOverride: ""
fullnameOverride: ""

replicas: 1

image:
  repository: sigp/lighthouse
  tag: v1.5.2
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

mode: "beacon"

## Additional arguments
extraArgs:
  - --network=prater
  - --eth1
  - --eth1-endpoints=http://your-eth1-node:8051

# When nodePort is enabled, your P2P port will be exposed via service type NodePort.
# This will generate a service for each replica, with a port binding via NodePort.
# This is useful if you want to expose and announce your node to the Internet.
nodePort:
  enabled: false



ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

## StatefulSet annotations
annotations: {}

livenessProbe:
  tcpSocket:
    port: p2p-tcp
  initialDelaySeconds: 60
  periodSeconds: 120

readinessProbe:
  tcpSocket:
    port: p2p-tcp
  initialDelaySeconds: 5
  periodSeconds: 10

## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
networkPolicy:
  enabled: false

## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistence:
  enabled: false
  accessModes:
  - ReadWriteOnce
  size: 20Gi
  annotations: {}
  # selector:
  #   matchLabels:
  #     app.kubernetes.io/name: something
  # subPath: ""
  # existingClaim:

## Pod Labels
podLabels: {}

## Pod Annotations
podAnnotations: {}

podManagementPolicy: OrderedReady

## Assign a PriorityClassName to pods if set
# priorityClassName:

rbac:
  create: true
  pspEnabled: true

resources: {}
# limits:
#   cpu: 200m
#   memory: 256Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  #automountServiceAccountToken: ""

terminationGracePeriodSeconds: 4800

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# The values to set in the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

updateStrategy:
  type: RollingUpdate

serviceMonitor:
  enabled: false
  interval: ""
  additionalLabels: {}
  annotations: {}
  # scrapeTimeout: 10s

## Init containers to be added to the pod
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

## Additional containers to be added to the pod
extraContainers: []

extraVolumes: []
extraVolumeMounts: []

# Extra ports, useful when using extraContainers
extraPorts: []

# Extra env variables to pass to the container
extraEnv: []

secretEnv: {}

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.34.0"
    pullPolicy: IfNotPresent
  resources: {}
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  #  requests:
  #    cpu: 100m
  #    memory: 128Mi

serviceMonitor:
  ## If true, a ServiceMonitor CRD is created for a prometheus operator
  ## https://github.com/coreos/prometheus-operator
  ##
  enabled: false
  path: /metrics
  #  namespace: monitoring  (defaults to use the namespace this chart is deployed to)
  labels: {}
  interval: 1m
  scheme: http
  tlsConfig: {}
  scrapeTimeout: 30s
  relabelings: []
